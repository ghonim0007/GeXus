name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", 3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    # Install system dependencies for Apache Beam
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml', '**/requirements/*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Upgrade pip and install build tools
      run: |
        python -m pip install --upgrade pip setuptools wheel
    
    - name: Install dependencies step by step
      run: |
        # Install Apache Beam first (it has complex dependencies)
        pip install apache-beam[gcp]>=2.50.0
        # Install other base dependencies
        pip install click>=8.0.0
        # Install dev dependencies
        pip install pytest>=7.0 pytest-cov>=4.0
        pip install black>=23.0 isort>=5.12 flake8>=6.0
        # Skip mypy for now (can cause issues with Apache Beam)
        # pip install mypy>=1.0
    
    - name: Install package in development mode
      run: |
        pip install -e .
    
    - name: Verify installation
      run: |
        python -c "import gexus; print('GeXus imported successfully')"
        python -c "import apache_beam; print('Apache Beam imported successfully')"
        gexus --version
    
    - name: Lint with flake8
      run: |
        flake8 gexus tests --max-line-length=88 --extend-ignore=E203,W503 --exclude=__pycache__
    
    - name: Format check with black
      run: |
        black --check gexus tests
    
    - name: Import sorting check
      run: |
        isort --check-only gexus tests
    
    - name: Test with pytest
      run: |
        pytest tests/ --cov=gexus --cov-report=xml --cov-report=term -v
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.10'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false